{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gzalv\\\\Documents\\\\Upgrade Hub\\\\MERN-grupo\\\\mern\\\\app-front-react\\\\src\\\\componentes\\\\EditarUsuario.js\";\nimport React, { Component } from 'react';\nimport './crearUsuario.css';\n\nclass EditarUsuario extends Component {\n  // this.props es objeto con datos públicos de React\n  // this.state objeto con datos privados de React, es decir,\n  // el estado interno del componente. Como en Angular\n  // las variables miembro de la clase privadas\n  constructor(props) {\n    super(props); // Invocamos al constructor del padre\n    // pasándole las propiedades públicas\n    // Para el evitar el problema del this con JS\n    // Con bind() hacemos que en el futuro, \n    // cuando se invoque al método,\n    // this   sea realmente   this, es decir, el objeto instanciado\n    // basado en clase, en estaso, cada uno de los componentes\n\n    this.state = {\n      _id: this.props._id,\n      email: this.props.email,\n      password: this.props.password,\n      nombre: this.props.nombre\n    };\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeNombre = this.onChangeNombre.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id; // Get id from url.\n\n    this.obtenerUsuario(id);\n  }\n\n  obtenerUsuario(id) {\n    window.fetch('http://127.0.0.1:4000/api/usuarios/' + id).then(res => res.json()).then(obj => {\n      console.log(\"User get from db:\", obj);\n      this.setState({\n        _id: obj._id,\n        email: obj.email,\n        password: obj.password,\n        nombre: obj.nombre\n      });\n    });\n  }\n\n  onSubmit(evt) {\n    evt.preventDefault(); // TODO: let isValid = isValidEmail(this.state.email) && ...\n\n    let isValid = true;\n\n    if (isValid) {\n      // Invocaríamos al servicio cliente HTTP, Ajax, fetch...\n      console.log(`Datos: ${this.state.email} , ${this.state.nombre}`);\n      window.fetch('http://127.0.0.1:4000/api/usuarios/registro/editar/' + this.state._id, {\n        method: 'put',\n        body: JSON.stringify({\n          \"email\": this.state.email,\n          \"password\": this.state.password,\n          \"nombre\": this.state.nombre\n        }),\n        headers: {\n          'Content-type': 'application/json'\n        }\n      }).then(res => alert('El usuario se ha modificado correctamente')).catch(err => alert('No se ha podido modificar el usuario'));\n    }\n  } // Método invocado por React cada vez que se cambia el valor del <INPUT>\n  // Se envia un objeto con la información del evento\n\n\n  onChangeEmail(evt) {\n    this.setState({\n      email: evt.target.value\n    });\n  }\n\n  onChangePassword(evt) {\n    this.setState({\n      password: evt.target.value\n    });\n  }\n\n  onChangeNombre(evt) {\n    this.setState({\n      nombre: evt.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"main-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Editar usuario\"), React.createElement(\"form\", {\n      className: \"register-form\",\n      onSubmit: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Email: \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"email\",\n      type: \"email\",\n      placeholder: \"Introduzca email\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Password: \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"password\",\n      type: \"password\",\n      placeholder: \"Introduzca password\",\n      onChange: this.onChangePassword,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Nombre: \"), React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"nombre\",\n      type: \"text\",\n      placeholder: \"Introduzca nombre\",\n      onChange: this.onChangeNombre,\n      value: this.state.nombre,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"btn register-button\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Guardar\")));\n  }\n\n}\n\nexport default EditarUsuario;","map":{"version":3,"sources":["C:/Users/gzalv/Documents/Upgrade Hub/MERN-grupo/mern/app-front-react/src/componentes/EditarUsuario.js"],"names":["React","Component","EditarUsuario","constructor","props","state","_id","email","password","nombre","onChangeEmail","bind","onChangePassword","onChangeNombre","onSubmit","componentDidMount","id","match","params","obtenerUsuario","window","fetch","then","res","json","obj","console","log","setState","evt","preventDefault","isValid","method","body","JSON","stringify","headers","alert","catch","err","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './crearUsuario.css';\r\n\r\nclass EditarUsuario extends Component {\r\n    // this.props es objeto con datos públicos de React\r\n    // this.state objeto con datos privados de React, es decir,\r\n    // el estado interno del componente. Como en Angular\r\n    // las variables miembro de la clase privadas\r\n\r\n    constructor(props) {\r\n        super(props);   // Invocamos al constructor del padre\r\n        // pasándole las propiedades públicas\r\n\r\n        // Para el evitar el problema del this con JS\r\n        // Con bind() hacemos que en el futuro, \r\n        // cuando se invoque al método,\r\n        // this   sea realmente   this, es decir, el objeto instanciado\r\n        // basado en clase, en estaso, cada uno de los componentes\r\n        this.state = {\r\n            _id: this.props._id,\r\n            email: this.props.email,\r\n            password: this.props.password,\r\n            nombre: this.props.nombre\r\n        };\r\n        this.onChangeEmail = this.onChangeEmail.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n        this.onChangeNombre = this.onChangeNombre.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { id } = this.props.match.params; // Get id from url.\r\n        this.obtenerUsuario(id);\r\n    }\r\n\r\n    obtenerUsuario(id) {\r\n        window.fetch('http://127.0.0.1:4000/api/usuarios/' + id)\r\n            .then(res => res.json())\r\n            .then(obj => {\r\n                console.log(\"User get from db:\", obj);\r\n                this.setState({\r\n                    _id: obj._id,\r\n                    email: obj.email,\r\n                    password: obj.password,\r\n                    nombre: obj.nombre\r\n                });\r\n            });\r\n    }\r\n\r\n    onSubmit(evt) {\r\n        evt.preventDefault();\r\n\r\n        // TODO: let isValid = isValidEmail(this.state.email) && ...\r\n\r\n        let isValid = true;\r\n        if (isValid) {\r\n            // Invocaríamos al servicio cliente HTTP, Ajax, fetch...\r\n            console.log(`Datos: ${this.state.email} , ${this.state.nombre}`);\r\n            window.fetch('http://127.0.0.1:4000/api/usuarios/registro/editar/' + this.state._id, {\r\n                method: 'put',\r\n                body: JSON.stringify({\r\n                    \"email\": this.state.email,\r\n                    \"password\": this.state.password,\r\n                    \"nombre\": this.state.nombre\r\n                }),\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }).then((res) => alert('El usuario se ha modificado correctamente'))\r\n                .catch((err) => alert('No se ha podido modificar el usuario'));\r\n        }\r\n    }\r\n\r\n    // Método invocado por React cada vez que se cambia el valor del <INPUT>\r\n    // Se envia un objeto con la información del evento\r\n    onChangeEmail(evt) {\r\n        this.setState({\r\n            email: evt.target.value\r\n        });\r\n    }\r\n    onChangePassword(evt) {\r\n        this.setState({\r\n            password: evt.target.value\r\n        });\r\n    }\r\n    onChangeNombre(evt) {\r\n        this.setState({\r\n            nombre: evt.target.value\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2 className=\"main-title\">Editar usuario</h2>\r\n                <form className=\"register-form\" onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Email: </label>\r\n                        <input className=\"form-control\" id=\"email\" type=\"email\"\r\n                            placeholder=\"Introduzca email\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChangeEmail}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password: </label>\r\n                        <input className=\"form-control\" id=\"password\" type=\"password\"\r\n                            placeholder=\"Introduzca password\"\r\n                            onChange={this.onChangePassword}\r\n                            value={this.state.password} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Nombre: </label>\r\n                        <input className=\"form-control\" id=\"nombre\" type=\"text\"\r\n                            placeholder=\"Introduzca nombre\"\r\n                            onChange={this.onChangeNombre}\r\n                            value={this.state.nombre} />\r\n                    </div>\r\n                    <button className=\"btn register-button\" type=\"submit\">Guardar</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default EditarUsuario;\r\n"]},"metadata":{},"sourceType":"module"}